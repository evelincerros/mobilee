{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport WelcomeScreen from \"./components/WelcomeScreen\";\nimport CameraFeature from \"./components/CameraFeature\";\nimport ProfileScreen from \"./components/ProfileScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem(\"token\");\n          setIsLoggedIn(!!token);\n        } catch (error) {\n          console.error(\"Error fetching token:\", error);\n          setIsLoggedIn(false);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n  }, []);\n  if (isLoggedIn === null) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: isLoggedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Welcome\",\n          options: {\n            headerShown: false\n          },\n          children: function children(props) {\n            return _jsx(WelcomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setIsLoggedIn: setIsLoggedIn\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"CameraFeature\",\n          options: {\n            headerShown: false\n          },\n          children: function children(props) {\n            return _jsx(CameraFeature, _objectSpread(_objectSpread({}, props), {}, {\n              setIsLoggedIn: setIsLoggedIn\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          options: {\n            headerShown: true\n          },\n          children: function children(props) {\n            return _jsx(ProfileScreen, _objectSpread({}, props));\n          }\n        })]\n      }) : _jsx(Stack.Screen, {\n        name: \"Login\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n            setIsLoggedIn: setIsLoggedIn\n          }));\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","AsyncStorage","LoginScreen","WelcomeScreen","CameraFeature","ProfileScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkLoginStatus","_ref","_asyncToGenerator","token","getItem","error","console","apply","arguments","children","Navigator","Screen","name","options","headerShown","props","_objectSpread"],"sources":["C:/Users/eveli/OneDrive - Arkansas Tech University/mobile app/frontend/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// Import your screens\nimport LoginScreen from \"./components/LoginScreen\";\nimport WelcomeScreen from \"./components/WelcomeScreen\";\nimport CameraFeature from \"./components/CameraFeature\";\nimport ProfileScreen from \"./components/ProfileScreen\"; \n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(null); // Initialize as null\n\n  useEffect(() => {\n    const checkLoginStatus = async () => {\n      try {\n        const token = await AsyncStorage.getItem(\"token\");\n        setIsLoggedIn(!!token);\n      } catch (error) {\n        console.error(\"Error fetching token:\", error);\n        setIsLoggedIn(false);\n      }\n    };\n\n    checkLoginStatus();\n  }, []);\n\n  if (isLoggedIn === null) {\n    // Optional: Show a loading indicator while checking login status\n    return null;\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {isLoggedIn ? (\n          <>\n            <Stack.Screen name=\"Welcome\" options={{ headerShown: false }}>\n              {(props) => (\n                <WelcomeScreen {...props} setIsLoggedIn={setIsLoggedIn} />\n              )}\n            </Stack.Screen>\n            <Stack.Screen name=\"CameraFeature\" options={{ headerShown: false }}>\n              {(props) => (\n                <CameraFeature {...props} setIsLoggedIn={setIsLoggedIn} />\n              )}\n            </Stack.Screen>\n            <Stack.Screen name=\"Profile\" options={{ headerShown: true }}>\n              {(props) => <ProfileScreen {...props} />}\n            </Stack.Screen>\n          </>\n        ) : (\n          <Stack.Screen name=\"Login\" options={{ headerShown: false }}>\n            {(props) => (\n              <LoginScreen {...props} setIsLoggedIn={setIsLoggedIn} />\n            )}\n          </Stack.Screen>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
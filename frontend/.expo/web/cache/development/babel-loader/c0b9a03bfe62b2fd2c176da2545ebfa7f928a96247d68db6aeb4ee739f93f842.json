{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddItemModal(_ref) {\n  var onAddItem = _ref.onAddItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    title = _useState4[0],\n    setTitle = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    description = _useState6[0],\n    setDescription = _useState6[1];\n  var handlePress = function handlePress() {\n    if (title.trim()) {\n      onAddItem({\n        title: title.trim(),\n        description: description.trim()\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n      setModalVisible(false);\n    } else {\n      alert(\"Please enter an item\");\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.addButtonText,\n        children: \" + \"\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Add Item\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Enter item\",\n            value: title,\n            onChangeText: function onChangeText(text) {\n              return setTitle(text);\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Enter Description\",\n            value: description,\n            onChangeText: function onChangeText(text) {\n              return setDescription(text);\n            }\n          }), _jsxs(View, {\n            style: styles.buttonContainer,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.button, styles.successButton],\n              onPress: handlePress,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Add\"\n              })\n            }), _jsx(TouchableOpacity, {\n              title: \"Cancel\",\n              style: [styles.button, styles.cancelButton],\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Cancel\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  addButton: {\n    width: 60,\n    padding: 15,\n    backgroundColor: \"#0fff12\",\n    borderRadius: 50,\n    alignSelf: \"center\"\n  },\n  addButtonText: {\n    fontSize: 24,\n    textAlign: \"center\"\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\"\n  },\n  modalContent: {\n    backgroundColor: \"#fff\",\n    marginHorizontal: 30,\n    padding: 20,\n    borderRadius: 10,\n    height: 250,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  input: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    padding: 8,\n    marginVertical: 10\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  button: {\n    flex: 1,\n    padding: 10,\n    marginHorizontal: 5,\n    alignItems: \"center\"\n  },\n  successButton: {\n    backgroundColor: \"#0fff12\"\n  },\n  cancelButton: {\n    backgroundColor: \"#ff5c5c\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","Modal","Text","TextInput","View","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","AddItemModal","_ref","onAddItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","title","setTitle","_useState5","_useState6","description","setDescription","handlePress","trim","alert","children","style","styles","addButton","onPress","addButtonText","visible","animationType","transparent","onRequestClose","modalOverlay","modalContent","modalTitle","input","placeholder","value","onChangeText","text","buttonContainer","button","successButton","buttonText","cancelButton","create","width","padding","backgroundColor","borderRadius","alignSelf","fontSize","textAlign","flex","justifyContent","marginHorizontal","height","display","fontWeight","borderColor","borderWidth","marginVertical","flexDirection","alignItems","color"],"sources":["C:/Users/eveli/OneDrive - Arkansas Tech University/mobile app/frontend/components/AddItemModal.js"],"sourcesContent":["// component that provides a Plus sign button that when clicked opens a modal to enter data.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nexport default function AddItemModal({ onAddItem }) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handlePress = () => {\r\n    if (title.trim()) {\r\n      onAddItem({ title: title.trim(), description: description.trim() }); //we will define this function later\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setModalVisible(false);\r\n    } else {\r\n      alert(\"Please enter an item\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        style={styles.addButton}\r\n        onPress={() => setModalVisible(true)}\r\n      >\r\n        <Text style={styles.addButtonText}> + </Text>\r\n      </TouchableOpacity>\r\n      <Modal\r\n        visible={modalVisible}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalTitle}>Add Item</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter item\"\r\n              value={title}\r\n              onChangeText={(text) => setTitle(text)}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChangeText={(text) => setDescription(text)}\r\n            />\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.successButton]}\r\n                onPress={handlePress}\r\n              >\r\n                <Text style={styles.buttonText}>Add</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                title=\"Cancel\"\r\n                style={[styles.button, styles.cancelButton]}\r\n                onPress={() => setModalVisible(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  addButton: {\r\n    width: 60,\r\n    padding: 15,\r\n    backgroundColor: \"#0fff12\",\r\n    borderRadius: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n  addButtonText: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n  },\r\n  modalContent: {\r\n    backgroundColor: \"#fff\",\r\n    marginHorizontal: 30,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    height: 250,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    padding: 8,\r\n    marginVertical: 10,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    padding: 10,\r\n    marginHorizontal: 5,\r\n    alignItems: \"center\",\r\n  },\r\n  successButton: {\r\n    backgroundColor: \"#0fff12\",\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: \"#ff5c5c\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
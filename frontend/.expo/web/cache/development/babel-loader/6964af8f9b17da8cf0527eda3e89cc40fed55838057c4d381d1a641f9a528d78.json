{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport styles from \"./styles/styles\";\nimport profileScreen from \".components/profileScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation,\n    setIsLoggedIn = _ref.setIsLoggedIn;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    firstName = _useState6[0],\n    setFirstName = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastName = _useState8[0],\n    setLastName = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isLogin = _useState10[0],\n    setIsLogin = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    message = _useState12[0],\n    setMessage = _useState12[1];\n  var handlePress = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (isLogin) {\n        if (email === \"\" || password === \"\") {\n          setMessage(\"Please fill out all fields.\");\n          return;\n        }\n      } else {\n        if (email === \"\" || password === \"\" || firstName === \"\" || lastName === \"\") {\n          setMessage(\"Please fill out all fields.\");\n          return;\n        }\n      }\n      var url = isLogin ? \"http://10.200.196.203:5000/users/login\" : \"http://10.200.196.203:5000/users/register\";\n      var body = isLogin ? {\n        username: email,\n        password: password\n      } : {\n        username: email,\n        password: password,\n        firstname: firstName,\n        lastname: lastName\n      };\n      try {\n        var response = yield fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        var result = yield response.json();\n        if (response.ok) {\n          if (isLogin) {\n            setMessage(\"Login successful\");\n            if (result.token) {\n              console.log(\"Received token:\", result.token);\n              yield AsyncStorage.setItem(\"token\", result.token);\n              yield AsyncStorage.setItem(\"email\", email);\n              yield AsyncStorage.setItem(\"firstName\", result.firstname || firstName);\n              yield AsyncStorage.setItem(\"lastName\", result.lastname || lastName);\n              setIsLoggedIn(true);\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: \"Profile\"\n                }]\n              });\n            }\n          } else {\n            setMessage(\"Registration successful. You will now log in.\");\n            setIsLogin(true);\n          }\n        } else {\n          setMessage(result.message || \"Something went wrong.\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        setMessage(\"Error connecting to the server.\");\n      }\n    });\n    return function handlePress() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }), !isLogin && _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter first name\",\n          value: firstName,\n          onChangeText: setFirstName\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter last name\",\n          value: lastName,\n          onChangeText: setLastName\n        })]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter email\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            title: isLogin ? \"Login\" : \"Sign Up\",\n            onPress: handlePress\n          })\n        })\n      }), message ? _jsx(Text, {\n        style: styles.message,\n        children: message\n      }) : null]\n    })\n  });\n}\nvar loginStyles = StyleSheet.create({\n  loginButtonContainer: {\n    marginTop: 20,\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","SafeAreaView","StyleSheet","TextInput","Button","View","AsyncStorage","styles","profileScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginScreen","_ref","navigation","setIsLoggedIn","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","firstName","setFirstName","_useState7","_useState8","lastName","setLastName","_useState9","_useState10","isLogin","setIsLogin","_useState11","_useState12","message","setMessage","handlePress","_ref2","_asyncToGenerator","url","body","username","firstname","lastname","response","fetch","method","headers","JSON","stringify","result","json","ok","token","console","log","setItem","reset","index","routes","name","error","apply","arguments","style","container","children","headerText","input","placeholder","value","onChangeText","keyboardType","secureTextEntry","buttonContainer","button","title","onPress","loginStyles","create","loginButtonContainer","marginTop","width","display","justifyContent"],"sources":["C:/Users/eveli/OneDrive - Arkansas Tech University/mobile app/frontend/components/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  View,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport styles from \"./styles/styles\";\r\nimport profileScreen from \".components/profileScreen\"\r\nexport default function LoginScreen({ navigation, setIsLoggedIn }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handlePress = async () => {\r\n    if (isLogin) {\r\n      if (email === \"\" || password === \"\") {\r\n        setMessage(\"Please fill out all fields.\");\r\n        return;\r\n      }\r\n    } else {\r\n      if (\r\n        email === \"\" ||\r\n        password === \"\" ||\r\n        firstName === \"\" ||\r\n        lastName === \"\"\r\n      ) {\r\n        setMessage(\"Please fill out all fields.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const url = isLogin\r\n      ? \"http://10.200.196.203:5000/users/login\"\r\n      : \"http://10.200.196.203:5000/users/register\";\r\n\r\n    const body = isLogin\r\n      ? { username: email, password }\r\n      : { username: email, password, firstname: firstName, lastname: lastName };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        if (isLogin) {\r\n          setMessage(\"Login successful\");\r\n          if (result.token) {\r\n            console.log(\"Received token:\", result.token);\r\n            await AsyncStorage.setItem(\"token\", result.token);\r\n            await AsyncStorage.setItem(\"email\", email);\r\n            await AsyncStorage.setItem(\r\n              \"firstName\",\r\n              result.firstname || firstName\r\n            );\r\n            await AsyncStorage.setItem(\"lastName\", result.lastname || lastName);\r\n            setIsLoggedIn(true);\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: \"Profile\" }],\r\n            });\r\n          }\r\n        } else {\r\n          setMessage(\"Registration successful. You will now log in.\");\r\n          setIsLogin(true); // Automatically switch to login view after registration\r\n        }\r\n      } else {\r\n        setMessage(result.message || \"Something went wrong.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessage(\"Error connecting to the server.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text style={styles.headerText}>{isLogin ? \"Login\" : \"Sign Up\"}</Text>\r\n\r\n        {!isLogin && (\r\n          <>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter first name\"\r\n              value={firstName}\r\n              onChangeText={setFirstName}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter last name\"\r\n              value={lastName}\r\n              onChangeText={setLastName}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChangeText={setEmail}\r\n          keyboardType=\"email-address\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry={true}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <View style={styles.button}>\r\n            <Button\r\n              title={isLogin ? \"Login\" : \"Sign Up\"}\r\n              onPress={handlePress}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {message ? <Text style={styles.message}>{message}</Text> : null}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst loginStyles = StyleSheet.create({\r\n  loginButtonContainer: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}